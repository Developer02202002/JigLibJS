(function(b){var e=b.Vector3DUtil;var c=b.JNumber3D;var d=b.EdgeData;var g=b.OctreeCell;var a=b.TriangleVertexIndices;var f=function(){this._testCounter=0;this._cells=[];this._vertices=[];this._triangles=[];this._cellsToTest=[];this._boundingBox=[];};f.prototype.get_trianglesData=function(){return this._triangles;};f.prototype.getTriangle=function(h){return this._triangles[h];};f.prototype.get_verticesData=function(){return this._vertices;};f.prototype.getVertex=function(h){return this._vertices[h];};f.prototype.boundingBox=function(){return this._boundingBox;};f.prototype.clear=function(){this._cells=[];this._vertices=[];this._triangles=[];};f.prototype.addTriangles=function(s,t,q,j){this.clear();this._vertices.concat(s);var l,h=c.NUM_TINY;var o,n,m;var v,u,r;var k;for(var p=0;p<q.length;p++){var w=q[p];o=w.i0;n=w.i1;m=w.i2;v=e.subtract(s[n],s[o]);u=e.subtract(s[m],s[o]);r=e.crossProduct(v,u);l=e.get_length(r);if(l>h){k=new JIndexedTriangle();k.setVertexIndices(o,n,m,this._vertices);this._triangles.push(k);}}};f.prototype.buildOctree=function(q,k){this._boundingBox.clear();for(var m=0;m<this._vertices.length;m++){var r=this._vertices[m];this._boundingBox.addPoint(r);}this._cells=[];this._cells.push(new g(this._boundingBox));var h=this._triangles.length;for(var m=0;m<h;m++){this._cells[0].triangleIndices[m]=m;}var s=[];s.push(0);var o;var p;var n;while(s.length!=0){p=s.pop();if(this._cells[p].triangleIndices.length<=q||this._cells[p].AABox.getRadiusAboutCentre()<k){continue;}for(m=0;m<g.NUM_CHILDREN;m++){this._cells[p].childCellIndices[m]=this._cells.length;s.push(this._cells.length);this._cells.push(new g(this.createAABox(this._cells[p].AABox,m)));n=this._cells[this._cells.length-1];h=this._cells[p].triangleIndices.length;for(var l=0;l<h;l++){o=this._cells[p].triangleIndices[l];if(this.doesTriangleIntersectCell(this._triangles[o],n)){n.triangleIndices.push(o);}}}this._cells[p].triangleIndices=[];}};f.prototype.updateTriangles=function(h){this._vertices.concat(h);for(var j=0;j<this._triangles.length;j++){var k=this._triangles[j];k.updateVertexIndices(this._vertices);}};f.prototype.getTrianglesIntersectingtAABox=function(n,j){if(this._cells.length==0){return 0;}this._cellsToTest=[];this._cellsToTest.push(0);this.incrementTestCounter();var l,k,h,o;while(this._cellsToTest.length!=0){l=this._cellsToTest.pop();h=this._cells[l];if(!j.overlapTest(h.AABox)){continue;}if(h.isLeaf()){k=h.triangleIndices.length;for(var m=0;m<k;m++){o=this.getTriangle(h.triangleIndices[m]);if(o.counter!=this._testCounter){o.counter=this._testCounter;if(j.overlapTest(o.get_boundingBox())){n.push(h.triangleIndices[m]);}}}}else{for(m=0;m<g.NUM_CHILDREN;m++){this._cellsToTest.push(h.childCellIndices[m]);}}}return n.length;};f.prototype.dumpStats=function(){var j=0,m,k,h;var n=[];n.push(0);while(n.length!=0){k=n.pop();h=h[k];if(h.isLeaf()){m=h.triangleIndices.length;if(m>j){j=m;}}else{for(var l=0;l<g.NUM_CHILDREN;l++){if((h.childCellIndices[l]>=0)&&(h.childCellIndices[l]<this._cells.length)){n.push(h.childCellIndices[l]);}}}}};f.prototype.createAABox=function(i,j){var l=c.getScaleVector(e.subtract(i.maxPos,i.minPos),0.5);var k;switch(j){case 0:k=[1,1,1];break;case 1:k=[1,1,0];break;case 2:k=[1,0,1];break;case 3:k=[1,0,0];break;case 4:k=[0,1,1];break;case 5:k=[0,1,0];break;case 6:k=[0,0,1];break;case 7:k=[0,0,0];break;default:k=[0,0,0];break;}var h=new JAABox();h.minPos=e.add(i.minPos,[k.x*l.x,k.y*l.y,k.z*l.z]);h.maxPos=e.add(h.minPos,l);e.scaleBy(l,0.00001);h.minPos=e.subtract(h.minPos,l);h.maxPos=e.subtract(h.maxPos,l);return h;};f.prototype.doesTriangleIntersectCell=function(m,o){if(!m.get_boundingBox().overlapTest(o.AABox)){return false;}if(o.AABox.isPointInside(this.getVertex(m.getVertexIndex(0)))||o.AABox.isPointInside(this.getVertex(m.getVertexIndex(1)))||o.AABox.isPointInside(this.getVertex(m.getVertexIndex(2)))){return true;}var q=new JTriangle(this.getVertex(m.getVertexIndex(0)),this.getVertex(m.getVertexIndex(1)),this.getVertex(m.getVertexIndex(2)));var h;var k;var j=o.egdes;var r=o.points;for(var l=0;l<12;l++){h=j[l];k=new JSegment(r[h.ind0],e.subtract(r[h.ind1],r[h.ind0]));if(q.segmentTriangleIntersection(null,k)){return true;}}var p;var n;for(l=0;l<3;l++){p=q.getVertex(l);n=q.getVertex((l+1)%3);if(o.AABox.segmentAABoxOverlap(new JSegment(p,e.subtract(n,p)))){return true;}}return false;};f.prototype.incrementTestCounter=function(){++this._testCounter;if(this._testCounter==0){var j=this._triangles.length;for(var h=0;h<j;h++){this._triangles[h].counter=0;}this._testCounter=1;}};b.JOctree=f;})(jigLib);