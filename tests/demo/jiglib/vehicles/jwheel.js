(function(e){var m=e.Vector3DUtil;var g=e.JMatrix3D;var a=e.JNumber3D;var n=e.JSegment;var h=e.PhysicsSystem;var b=Math,f=b.PI,d=b.min,i=b.max,k=b.cos,l=b.abs,j=b.sqrt;var c=function(o){this._car=o;};c.prototype.name=null;c.prototype.noslipVel=0.2;c.prototype.slipVel=0.4;c.prototype.slipFactor=0.7;c.prototype.smallVel=3;c.prototype._car=null;c.prototype._pos=null;c.prototype._axisUp=null;c.prototype._spring=null;c.prototype._travel=null;c.prototype._inertia=null;c.prototype._radius=null;c.prototype._sideFriction=null;c.prototype._fwdFriction=null;c.prototype._damping=null;c.prototype._numRays=null;c.prototype._angVel=null;c.prototype._steerAngle=null;c.prototype._torque=null;c.prototype._driveTorque=null;c.prototype._axisAngle=null;c.prototype._displacement=null;c.prototype._upSpeed=null;c.prototype._rotDamping=null;c.prototype._locked=null;c.prototype._lastDisplacement=null;c.prototype._lastOnFloor=null;c.prototype._angVelForGrip=null;c.prototype.worldPos=null;c.prototype.worldAxis=null;c.prototype.wheelFwd=null;c.prototype.wheelUp=null;c.prototype.wheelLeft=null;c.prototype.wheelRayEnd=null;c.prototype.wheelRay=null;c.prototype.groundUp=null;c.prototype.groundLeft=null;c.prototype.groundFwd=null;c.prototype.wheelPointVel=null;c.prototype.rimVel=null;c.prototype.worldVel=null;c.prototype.wheelCentreVel=null;c.prototype._collSystem=null;c.prototype.setup=function(v,s,x,o,t,u,p,r,q,w){if(x==null){x=0;}if(o==null){o=0;}if(t==null){t=0;}if(u==null){u=0;}if(p==null){p=0;}if(r==null){r=0;}if(q==null){q=0;}if(w==null){w=0;}this._pos=v;this._axisUp=s;this._spring=x;this._travel=o;this._inertia=t;this._radius=u;this._sideFriction=p;this._fwdFriction=r;this._damping=q;this._numRays=w;this.reset();};c.prototype.addTorque=function(o){this._driveTorque+=o;};c.prototype.setLock=function(o){this._locked=o;};c.prototype.setSteerAngle=function(o){this._steerAngle=o;};c.prototype.getSteerAngle=function(){return this._steerAngle;};c.prototype.getPos=function(){return this._pos;};c.prototype.getLocalAxisUp=function(){return this._axisUp;};c.prototype.getActualPos=function(){return m.add(this._pos,a.getScaleVector(this._axisUp,this._displacement));};c.prototype.getRadius=function(){return this._radius;};c.prototype.getDisplacement=function(){return this._displacement;};c.prototype.getAxisAngle=function(){return this._axisAngle;};c.prototype.getRollAngle=function(){return 0.1*this._angVel*180/f;};c.prototype.setRotationDamping=function(o){this._rotDamping=o;};c.prototype.getRotationDamping=function(){return this._rotDamping;};c.prototype.getOnFloor=function(){return this._lastOnFloor;};c.prototype.addForcesToCar=function(K){var p=[0,0,0,0];this._lastDisplacement=this._displacement;this._displacement=0;var U=this._car._chassis;worldPos=this._pos.slice(0);g.multiplyVector(U.get_currentState().get_orientation(),worldPos);worldPos=m.add(U.get_currentState().position,worldPos);worldAxis=this._axisUp.slice(0);g.multiplyVector(U.get_currentState().get_orientation(),worldAxis);wheelFwd=U.get_currentState().getOrientationCols()[2].slice(0);g.multiplyVector(g.getRotationMatrix(worldAxis[0],worldAxis[1],worldAxis[2],this._steerAngle),wheelFwd);wheelUp=worldAxis;wheelLeft=m.crossProduct(wheelUp,wheelFwd);m.normalize(wheelLeft);var T=2*this._radius+this._travel;wheelRayEnd=m.subtract(worldPos,a.getScaleVector(worldAxis,this._radius));wheelRay=new n(m.add(wheelRayEnd,a.getScaleVector(worldAxis,T)),a.getScaleVector(worldAxis,-T));if(this._collSystem==null){this._collSystem=h.getInstance().getCollisionSystem();}var Q=10;var q=d(this._numRays,Q);var u=[];var M=[];var x=(2*this._radius)/(q+1);var R=x;this._lastOnFloor=false;var v;var C;var z=0;var F=0;var o=null;for(F=0;F<q;F++){u[F]={};v=(R+F*x)-this._radius;C=this._radius*(1-k(90*(v/this._radius)*f/180));o=wheelRay.clone();o.origin=m.add(o.origin,m.add(a.getScaleVector(wheelFwd,v),a.getScaleVector(wheelUp,C)));if(this._collSystem.segmentIntersect(u[F],o,U)){this._lastOnFloor=true;if(u[F].fracOut<u[z].fracOut){z=F;}}M[F]=o;}if(!this._lastOnFloor){return false;}var s=u[z].fracOut;var J=u[z].posOut;var G=u[z].bodyOut;var L=worldAxis.slice(0);if(q>1){for(F=0;F<q;F++){var B=u[F].fracOut;if(B<=1){L=m.add(L,a.getScaleVector(m.subtract(worldPos,M[F].getEnd()),1-B));}}m.normalize(L);}else{L=u[z].normalOut;}this._displacement=T*(1-s);if(this._displacement<0){this._displacement=0;}var I=this._pos.slice(0);g.multiplyVector(U.get_currentState().get_orientation(),I);wheelPointVel=m.add(U.get_currentState().linVelocity,m.crossProduct(U.get_currentState().rotVelocity,I));if(this._displacement>this._travel){this._displacement=this._travel;var t=m.dotProduct(wheelPointVel,L)/K*(U.get_mass()*0.25);t=t*(1+G.get_restitution());w=a.getScaleVector(L,-t);p=m.add(p,w);}var N=(this._displacement-(this._travel/2))*this._spring;N*=m.dotProduct(L,worldAxis);var r=this._upSpeed*this._damping;var O=N+r;if(O<0){O=0;}var w=a.getScaleVector(worldAxis,O);p=m.add(p,w);groundUp=L;groundLeft=m.crossProduct(L,wheelFwd);m.normalize(groundLeft);groundFwd=m.crossProduct(groundLeft,groundUp);rimVel=a.getScaleVector(m.crossProduct(wheelLeft,m.subtract(J,worldPos)),this._angVel);wheelPointVel=m.add(wheelPointVel,rimVel);if(G.get_movable()){worldVel=m.add(G.get_currentState().linVelocity,m.crossProduct(G.get_currentState().rotVelocity,m.subtract(J,G.get_currentState().position)));wheelPointVel=m.subtract(wheelPointVel,worldVel);}var y=this._sideFriction;var A=m.dotProduct(wheelPointVel,groundLeft);if((A>this.slipVel)||(A<-this.slipVel)){y*=this.slipFactor;}else{if((A>this.noslipVel)||(A<-this.noslipVel)){y*=(1-(1-this.slipFactor)*(l(A)-this.noslipVel)/(this.slipVel-this.noslipVel));}}if(A<0){y*=-1;}if(l(A)<this.smallVel){y*=l(A)/this.smallVel;}var S=-y*O;w=a.getScaleVector(groundLeft,S);p=m.add(p,w);y=this._fwdFriction;var E=m.dotProduct(wheelPointVel,groundFwd);if((E>this.slipVel)||(E<-this.slipVel)){y*=this.slipFactor;}else{if((E>this.noslipVel)||(E<-this.noslipVel)){y*=(1-(1-this.slipFactor)*(l(E)-this.noslipVel)/(this.slipVel-this.noslipVel));}}if(E<0){y*=-1;}if(l(E)<this.smallVel){y*=(l(E)/this.smallVel);}var P=-y*O;w=a.getScaleVector(groundFwd,P);p=m.add(p,w);wheelCentreVel=m.add(U.get_currentState().linVelocity,m.crossProduct(U.get_currentState().rotVelocity,I));this._angVelForGrip=m.dotProduct(wheelCentreVel,groundFwd)/this._radius;this._torque+=(-P*this._radius);U.addWorldForce(p,J);if(G.get_movable()){var D=500;var H=D*G.get_mass();if(m.get_lengthSquared(p)>(H*H)){p=a.getScaleVector(p,H/m.get_length(p));}G.addWorldForce(a.getScaleVector(p,-1),J);}return true;};c.prototype.update=function(p){if(p<=0){return;}var o=this._angVel;this._upSpeed=(this._displacement-this._lastDisplacement)/i(p,a.NUM_TINY);if(this._locked){this._angVel=0;this._torque=0;}else{this._angVel+=(this._torque*p/this._inertia);this._torque=0;if(((o>this._angVelForGrip)&&(this._angVel<this._angVelForGrip))||((o<this._angVelForGrip)&&(this._angVel>this._angVelForGrip))){this._angVel=this._angVelForGrip;}this._angVel+=this._driveTorque*p/this._inertia;this._driveTorque=0;if(this._angVel<-100){this._angVel=-100;}else{if(this._angVel>100){this._angVel=100;}}this._angVel*=this._rotDamping;this._axisAngle+=(this._angVel*p*180/f);}};c.prototype.reset=function(){this._angVel=0;this._steerAngle=0;this._torque=0;this._driveTorque=0;this._axisAngle=0;this._displacement=0;this._upSpeed=0;this._locked=false;this._lastDisplacement=0;this._lastOnFloor=false;this._angVelForGrip=0;this._rotDamping=0.99;};e.JWheel=c;})(jigLib);